# This file is the entry point to configure your own services.
# Files in the packages/ subdirectory configure your dependencies.

# Put parameters here that don't need to change on each machine where the app is deployed
# https://symfony.com/doc/current/best_practices.html#use-parameters-for-application-configuration
parameters:
    locale: fr
    BASE_URL: '%env(resolve:BASE_URL)%'
    APOGEE_LOGIN: '%env(resolve:APOGEE_LOGIN)%'
    APOGEE_PASSWORD: '%env(resolve:APOGEE_PASSWORD)%'
    APOGEE_STRING: '%env(resolve:APOGEE_STRING)%'
    MSSQL_PASS: '%env(resolve:MSSQL_PASS)%'
    MSSQL_USER: '%env(resolve:MSSQL_USER)%'
    LDAP_HOST: '%env(resolve:LDAP_HOST)%'
    LDAP_LOGIN: '%env(resolve:LDAP_LOGIN)%'
    LDAP_PASSWORD: '%env(resolve:LDAP_PASSWORD)%'
    LDAP_BASE_DN: '%env(resolve:LDAP_BASE_DN)%'
    CAS_HOST: '%env(resolve:CAS_HOST)%'
    CAS_PORT: '%env(resolve:CAS_PORT)%'
    CAS_CONTEXT: '%env(resolve:CAS_CONTEXT)%'
    iconShow: '%env(resolve:ICON_SHOW)%'
    iconEdit: '%env(resolve:ICON_EDIT)%'
    iconDelete: '%env(resolve:ICON_DELETE)%'
    iconPrint: '%env(resolve:ICON_PRINT)%'
    iconDuplicate: '%env(resolve:ICON_DUPLICATE)%'
    iconAdd: '%env(resolve:ICON_ADD)%'
    iconHelp: '%env(resolve:ICON_HELP)%'
    iconAdmin: '%env(resolve:ICON_ADMINISTRATION)%' #'fas fa-wrench'
    iconDashboard: '%env(resolve:ICON_DASHBOARD)%' #fas fa-home'
    iconTrombi: '%env(resolve:ICON_TROMBINOSCOPE)%' #fa-user-friends
    iconAgenda: '%env(resolve:ICON_AGENDA)%' #ffa-calendar-alt
    iconApplications: '%env(resolve:ICON_APPLICATIONS)%' #ffa-toolbox
    iconDocuments: '%env(resolve:ICON_DOCUMENTS)%' #fa-folder
    iconInformation: '%env(resolve:ICON_INFORMATION)%' #fa-file-alt
    iconMessage: '%env(resolve:ICON_MESSAGE)%' #fas fa-home'
    iconNotification: '%env(resolve:ICON_NOTIFCATION)%' #fas fa-home'

services:
    # default configuration for services in *this* file
    _defaults:
        autowire: true      # Automatically injects dependencies in your services.
        autoconfigure: true # Automatically registers your services as commands, event subscribers, etc.
        bind:
            $bugsnag: '@bugsnag'

    # makes classes in src/ available to be used as services
    # this creates a service per class whose id is the fully-qualified class name
    App\:
        resource: '../src/'
        exclude:
            - '../src/DependencyInjection/'
            - '../src/Entity/'
            - '../src/Kernel.php'
            - '../src/Tests/'
            - '../src/Components/*/DependencyInjection/'

    # add more service definitions when explicit configuration is needed
    # please note that last definitions always *replace* previous ones

    App\Twig\AppExtension:
        calls:
            - method: setConfig
              arguments:
                  - '@App\Classes\Configuration'

  #    App\Event\SlugGenerator:
  #        tags:
  #            - { name: 'doctrine.event_subscriber' }

    App\Security\AbstractAuthenticator:
      class: App\Security\AbstractAuthenticator
      arguments:
        - '@Symfony\Component\Routing\Generator\UrlGeneratorInterface'
        - '@Symfony\Component\HttpFoundation\Session\SessionInterface'

    App\EventListener\LoggedOutAjaxListener:
      tags:
        - { name: kernel.event_listener, event: kernel.exception, priority: 8 }
